diff -u --recursive ./clean/linux-5.4.117/Documentation/admin-guide/kernel-parameters.txt ./linux-5.4.117/Documentation/admin-guide/kernel-parameters.txt
--- ./clean/linux-5.4.117/Documentation/admin-guide/kernel-parameters.txt	2021-05-07 08:51:38.000000000 +0000
+++ ./linux-5.4.117/Documentation/admin-guide/kernel-parameters.txt	2021-11-24 11:34:06.062790944 +0000
@@ -1172,7 +1172,7 @@
 			Format: {"off" | "on" | "skip[mbr]"}
 
 	efi=		[EFI]
-			Format: { "old_map", "nochunk", "noruntime", "debug" }
+			Format: { "old_map", "nochunk", "noruntime", "debug", "noexitbootservices" }
 			old_map [X86-64]: switch to the old ioremap-based EFI
 			runtime services mapping. 32-bit still uses this one by
 			default.
@@ -1181,6 +1181,9 @@
 			firmware implementations.
 			noruntime : disable EFI runtime services support
 			debug: enable misc debug output
+			noexitbootservices: do not call ExitBootServices,
+			which makes it possible to return to UEFI at the
+			expense of breaking many device drivers.
 
 	efi_no_storage_paranoia [EFI; X86]
 			Using this parameter you can use more than 50% of
diff -u --recursive ./clean/linux-5.4.117/arch/x86/boot/compressed/head_64.S ./linux-5.4.117/arch/x86/boot/compressed/head_64.S
--- ./clean/linux-5.4.117/arch/x86/boot/compressed/head_64.S	2021-05-07 08:51:38.000000000 +0000
+++ ./linux-5.4.117/arch/x86/boot/compressed/head_64.S	2022-01-28 14:57:16.063074748 +0000
@@ -505,9 +537,45 @@
 
 	.org 0x390
 ENTRY(efi64_stub_entry)
+	// called when entering via the systemd stub; sysv abi
 	movq	%rdi, efi64_config(%rip)	/* Handle */
 	movq	%rsi, efi64_config+8(%rip) /* EFI System table pointer */
 
+#if 1
+	// cache the sysv abi callee-saved registers and a few other parameters
+	// in very low memory
+#define UEFI_CONTEXT 0x100
+	movq %rbx, UEFI_CONTEXT + 0x00
+	movq %rbp, UEFI_CONTEXT + 0x08
+	movq %r12, UEFI_CONTEXT + 0x10
+	movq %r13, UEFI_CONTEXT + 0x18
+	movq %r14, UEFI_CONTEXT + 0x20
+	movq %r15, UEFI_CONTEXT + 0x28
+	movq %rsp, UEFI_CONTEXT + 0x30
+	mov  %cr0, %rbx
+	movq %rbx, UEFI_CONTEXT + 0x38
+	mov  %cr3, %rbx
+	movq %rbx, UEFI_CONTEXT + 0x40
+	mov  %cr4, %rbx
+	movq %rbx, UEFI_CONTEXT + 0x48
+	mov  %cr8, %rbx
+	movq %rbx, UEFI_CONTEXT + 0x50
+	sidt UEFI_CONTEXT + 0x60
+	sgdt UEFI_CONTEXT + 0x70
+	sldt UEFI_CONTEXT + 0x80
+
+	// arguments to our efi main
+	movq %rdi, UEFI_CONTEXT + 0x90
+	movq %rsi, UEFI_CONTEXT + 0x98
+
+	// pattern to check for corruption
+	movq  $0xDECAFBAD, %rbx
+	movq %rbx, UEFI_CONTEXT+0xa0
+	movq %rbx, UEFI_CONTEXT+0xa8
+
+	//movq	%rsp, efi64_config+48(%rip) /* EFI stack address */
+#endif
+
 	leaq	efi64_config(%rip), %rax
 	movq	%rax, efi_config(%rip)
 
diff -u --recursive ./clean/linux-5.4.117/drivers/firmware/efi/libstub/efi-stub-helper.c ./linux-5.4.117/drivers/firmware/efi/libstub/efi-stub-helper.c
--- ./clean/linux-5.4.117/drivers/firmware/efi/libstub/efi-stub-helper.c	2021-05-07 08:51:38.000000000 +0000
+++ ./linux-5.4.117/drivers/firmware/efi/libstub/efi-stub-helper.c	2022-01-10 19:50:54.791803548 +0000
@@ -32,6 +32,7 @@
 static int __section(.data) __nokaslr;
 static int __section(.data) __quiet;
 static int __section(.data) __novamap;
+static int __section(.data) __noexitbootservices;
 
 int __pure nokaslr(void)
 {
@@ -484,6 +485,11 @@
 			__novamap = 1;
 		}
 
+		if (!strncmp(str, "noexitbootservices", 18)) {
+			str += 18;
+			__noexitbootservices = 1;
+		}
+
 		/* Group words together, delimited by "," */
 		while (*str && *str != ' ' && *str != ',')
 			str++;
@@ -875,7 +896,15 @@
 	if (status != EFI_SUCCESS)
 		goto free_map;
 
+	if (__noexitbootservices)
+	{
+		efi_printk(sys_table_arg, "efi: not exiting bootservices\n");
+		return EFI_SUCCESS;
+	}
+
+	efi_printk(sys_table_arg, "efi: exiting bootservices\n");
 	status = efi_call_early(exit_boot_services, handle, *map->key_ptr);
+	efi_printk(sys_table_arg, "efi: exited bootservices\n");
 
 	if (status == EFI_INVALID_PARAMETER) {
 		/*
